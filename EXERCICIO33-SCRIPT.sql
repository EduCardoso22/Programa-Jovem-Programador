SET SQL_SAFE_UPDATES = 0;
DROP DATABASE IF EXISTS DBCANTINA;
CREATE DATABASE DBCANTINA;

USE DBCANTINA;

CREATE TABLE CLIENTE (
	IDCLIENTE INT NOT NULL AUTO_INCREMENT
	, NOME VARCHAR(100)
	, SEXO CHAR(1)
	, PRIMARY KEY (IDCLIENTE)
);

CREATE TABLE PRODUTO (
	IDPRODUTO INT NOT NULL AUTO_INCREMENT
	, NOME VARCHAR(100)
	, PRECO NUMERIC(8,2)
	, CATEGORIA VARCHAR(50)
	, PRIMARY KEY (IDPRODUTO)
);

CREATE TABLE PEDIDO (
	IDPEDIDO INT NOT NULL AUTO_INCREMENT
	, IDCLIENTE INT NOT NULL
	, DTPEDIDO DATE
	, PRIMARY KEY(IDPEDIDO)
	, FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE (IDCLIENTE)
);

CREATE TABLE ITEM_PEDIDO (
	IDPEDIDO INT NOT NULL 
	, IDPRODUTO INT NOT NULL
	, QTDE INT
	, PRECO_UNITARIO NUMERIC(8,2)
	, PRIMARY KEY (IDPEDIDO, IDPRODUTO)
	, FOREIGN KEY (IDPEDIDO) REFERENCES PEDIDO (IDPEDIDO)
	, FOREIGN KEY (IDPRODUTO) REFERENCES PRODUTO (IDPRODUTO)
);

INSERT INTO CLIENTE (NOME, SEXO)VALUES('JOAO', 'M');
INSERT INTO CLIENTE (NOME, SEXO)VALUES('MARIA', 'F');
INSERT INTO CLIENTE (NOME, SEXO)VALUES('ANA', 'F');
INSERT INTO CLIENTE (NOME, SEXO)VALUES('CARLOS', 'M');
INSERT INTO CLIENTE (NOME, SEXO)VALUES('ANTONIO', 'M');

INSERT INTO PRODUTO (NOME, PRECO, CATEGORIA)VALUES('BOLO DE CHOCOLATE', 2.5, 'DOCE');
INSERT INTO PRODUTO (NOME, PRECO, CATEGORIA)VALUES('BOLO DE CENOURA', 2.5, 'DOCE');
INSERT INTO PRODUTO (NOME, PRECO, CATEGORIA)VALUES('SUCO DE LARANJA', 3.0, 'SUCO');
INSERT INTO PRODUTO (NOME, PRECO, CATEGORIA)VALUES('SUCO DE MORANGO', 4.0, 'SUCO');
INSERT INTO PRODUTO (NOME, PRECO, CATEGORIA)VALUES('MISTO QUENTE', 1.5, 'SALGADO');


INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(1, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(1, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(3, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(1, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(1, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(5, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(3, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(5, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(1, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));

INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (01, 1, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (02, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (03, 3, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (01, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (02, 1, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (04, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (05, 5, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (06, 1, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (05, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (07, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (08, 3, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (11, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (12, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (10, 3, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (11, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (09, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (09, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (10, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (11, 5, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (12, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (10, 5, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (11, 1, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (14, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (15, 5, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (13, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (14, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (15, 3, RAND() * 10);

UPDATE ITEM_PEDIDO AS PED
SET PRECO_UNITARIO = (SELECT PRECO FROM PRODUTO WHERE IDPRODUTO = PED.IDPRODUTO);

-- RESPOSTAS EXERCICIO 33

-- 1.

SELECT NOME, PRECO FROM PRODUTO
ORDER BY CATEGORIA, NOME;

-- 2.

SELECT * FROM PEDIDO
WHERE IDCLIENTE = 3;

-- 3.

SELECT PEDIDO.IDPEDIDO, PEDIDO.DTPEDIDO, CLIENTE.IDCLIENTE, CLIENTE.NOME AS NOME_CLIENTE, PRODUTO.IDPRODUTO, PRODUTO.NOME AS NOME_PRODUTO, ITEM_PEDIDO.PRECO_UNITARIO, ITEM_PEDIDO.QTDE, (ITEM_PEDIDO.PRECO_UNITARIO * ITEM_PEDIDO.QTDE) AS VALOR_TOTAL
FROM PEDIDO
JOIN CLIENTE ON PEDIDO.IDCLIENTE = CLIENTE.IDCLIENTE
JOIN ITEM_PEDIDO ON PEDIDO.IDPEDIDO = ITEM_PEDIDO.IDPEDIDO
JOIN PRODUTO ON PRODUTO.IDPRODUTO = ITEM_PEDIDO.IDPRODUTO
WHERE PEDIDO.IDPEDIDO = 10;

-- 4.

SELECT SEXO, COUNT(*) AS QUANTIDADE
FROM CLIENTE
GROUP BY SEXO;

-- 5. IGUAL A 1.

SELECT NOME, PRECO FROM PRODUTO
ORDER BY CATEGORIA, NOME;

-- 6.

SELECT CATEGORIA, COUNT(*) AS  QTD_PRODUTO, AVG(PRECO) AS MEDIA_PRECO
FROM PRODUTO
GROUP BY CATEGORIA
ORDER BY CATEGORIA;

-- 7.

SELECT IDPRODUTO, SUM(QTDE) AS TOTAL_VENDIDO, PRECO_UNITARIO
FROM ITEM_PEDIDO
GROUP BY IDPRODUTO, PRECO_UNITARIO;

-- 8.

SELECT IDPEDIDO, IDPRODUTO, PRECO_UNITARIO, QTDE, (PRECO_UNITARIO * QTDE) AS VALOR_TOTAL
FROM ITEM_PEDIDO
ORDER BY IDPEDIDO, IDPRODUTO;

-- 9. 

SELECT COUNT(DISTINCT IDPEDIDO) AS TOTAL_PEDIDOS, AVG(QTDE) AS MEDIA_ITENS, AVG(PRECO_UNITARIO * QTDE) AS VALOR_MEDIO
FROM ITEM_PEDIDO;

-- 10. IGUAL A 2.

SELECT * FROM PEDIDO
WHERE IDCLIENTE = 3;

-- 11.

SELECT CLIENTE.IDCLIENTE, CLIENTE.NOME, COUNT(PEDIDO.IDPEDIDO) AS QTDE_PEDIDOS
FROM CLIENTE
JOIN PEDIDO ON CLIENTE.IDCLIENTE = PEDIDO.IDCLIENTE
GROUP BY CLIENTE.IDCLIENTE, CLIENTE.NOME;

-- 12. 

SELECT CLIENTE.IDCLIENTE, CLIENTE.NOME,COUNT(PEDIDO.IDPEDIDO) AS QTDE_PEDIDOS
FROM CLIENTE
LEFT JOIN PEDIDO ON CLIENTE.IDCLIENTE = PEDIDO.IDCLIENTE
GROUP BY CLIENTE.IDCLIENTE, CLIENTE.NOME;

-- 13.

SELECT PRODUTO.IDPRODUTO, PRODUTO.NOME, COUNT(DISTINCT ITEM_PEDIDO.IDPEDIDO) AS PEDIDOS_UNICOS, SUM(ITEM_PEDIDO.QTDE) AS TOTAL_VENDIDO, AVG(ITEM_PEDIDO.QTDE) AS MEDIA_POR_PEDIDO
FROM PRODUTO
LEFT JOIN ITEM_PEDIDO ON PRODUTO.IDPRODUTO = ITEM_PEDIDO.IDPRODUTO
GROUP BY PRODUTO.IDPRODUTO, PRODUTO.NOME
ORDER BY TOTAL_VENDIDO DESC;

-- 14.

SELECT PRODUTO.NOME, SUM(ITEM_PEDIDO.QTDE) AS TOTAL_VENDIDO
FROM PRODUTO
LEFT JOIN ITEM_PEDIDO ON PRODUTO.IDPRODUTO = ITEM_PEDIDO.IDPRODUTO 
WHERE ITEM_PEDIDO.IDPRODUTO IS NULL
GROUP BY PRODUTO.NOME;

-- 15.

SELECT CLIENTE.IDCLIENTE, CLIENTE.NOME, COUNT(PEDIDO.IDPEDIDO) AS QUANTIDADE_PEDIDOS
FROM CLIENTE
JOIN PEDIDO ON CLIENTE.IDCLIENTE = PEDIDO.IDCLIENTE
GROUP BY CLIENTE.IDCLIENTE, CLIENTE.NOME
HAVING COUNT(PEDIDO.IDPEDIDO) > 5
ORDER BY QUANTIDADE_PEDIDOS DESC;

-- 16

SELECT PEDIDO.IDPEDIDO, PEDIDO.DTPEDIDO, CLIENTE.IDCLIENTE, CLIENTE.NOME AS NOME_CLIENTE,
       PRODUTO.IDPRODUTO, PRODUTO.NOME AS NOME_PRODUTO, ITEM_PEDIDO.PRECO_UNITARIO, ITEM_PEDIDO.QTDE,
       (ITEM_PEDIDO.PRECO_UNITARIO * ITEM_PEDIDO.QTDE) AS VALOR_TOTAL
FROM PEDIDO
JOIN CLIENTE ON PEDIDO.IDCLIENTE = CLIENTE.IDCLIENTE
JOIN ITEM_PEDIDO ON PEDIDO.IDPEDIDO = ITEM_PEDIDO.IDPEDIDO
JOIN PRODUTO ON ITEM_PEDIDO.IDPRODUTO = PRODUTO.IDPRODUTO
WHERE PEDIDO.IDPEDIDO = 10;

-- 17

SELECT CLIENTE.SEXO, PRODUTO.CATEGORIA, SUM(ITEM_PEDIDO.QTDE) AS TOTAL_VENDIDO
FROM CLIENTE
JOIN PEDIDO ON CLIENTE.IDCLIENTE = PEDIDO.IDCLIENTE
JOIN ITEM_PEDIDO ON PEDIDO.IDPEDIDO = ITEM_PEDIDO.IDPEDIDO
JOIN PRODUTO ON ITEM_PEDIDO.IDPRODUTO = PRODUTO.IDPRODUTO
GROUP BY CLIENTE.SEXO, PRODUTO.CATEGORIA;


-- FIM --